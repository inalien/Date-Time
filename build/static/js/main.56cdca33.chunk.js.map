{"version":3,"sources":["serviceWorker.js","components/functions/time.js","components/content.jsx","components/today.js","components/functions/timer.js","components/tomorrow.js","components/functions/yester-timer.js","components/yesterday.js","components/tab.jsx","index.js","components/footer.jsx"],"names":["Boolean","window","location","hostname","match","Timer","mainTime","_useState","useState","date","Date","getHours","getMinutes","getSeconds","secondsLeft","_useState2","Object","slicedToArray","seconds","setSeconds","useEffect","startTime","stopTimer","setInterval","tick","clearInterval","updatedSeconds","_display$split","TimeFormat","fromS","split","_display$split2","h","m","s","react_default","a","createElement","react","hi2","today","Grid","container","spacing","align","justify","direction","style","paddingTop","Typography","variant","className","toDateString","time","components_tomorrow","myConstClass","left","setDate","getDate","getTomorrowDate","timer","color","fontWeight","components_yesterday","getYesterDate","yester_timer","TabPanel","props","children","value","index","other","objectWithoutProperties","assign","component","role","hidden","id","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","theme","root","backgroundColor","ReactDOM","render","classes","useTheme","_React$useState","React","_React$useState2","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","centered","Tab","label","lib_default","axis","onChangeIndex","dir","href","target","rel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56cdca33.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport TimeFormat from \"hh-mm-ss\";\n\nconst Timer = () => {\n  let mainTime;\n  const secondsLeft = () => {\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const left = hours * 3600 + (0 + minutes) * 60 + (0 + seconds);\n    return left;\n  };\n\n  const [seconds, setSeconds] = useState(secondsLeft());\n  useEffect(() => {\n    startTime();\n    return () => {\n      stopTimer();\n    };\n  });\n\n  const startTime = () => {\n    if (seconds && seconds > 0) {\n      mainTime = setInterval(tick, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    clearInterval(mainTime);\n  };\n\n  const tick = () => {\n    setSeconds(seconds => {\n      const updatedSeconds = seconds + 1;\n      if (updatedSeconds < 1) {\n        stopTimer();\n      }\n      return updatedSeconds;\n    });\n  };\n\n  const display = TimeFormat.fromS(seconds, \"hh:mm:ss\");\n  const [h, m, s] = display.split(\":\");\n  return (\n    <Fragment>\n      {h}:{m}:{s}\n    </Fragment>\n  );\n};\nexport default Timer;\n","export const hi1 = `Hello there!`;\nexport const hi2 = `Hello again!`;\nexport const currentdate = `The current date is`;\nexport const currenttime = `The current time is`;\nexport const developed = `Developed with React and Material-ui`;\nexport const yesterday = `Yesterday was`;\nexport const started = `and it started`;\nexport const tomorrow = `Tomorrow is`;\nexport const and = `and its`;\nexport const thanks = `Thanks`;\n\n","import React, { Fragment } from \"react\";\nimport Time from \"../components/functions/time\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport * as myConstClass from \"./content\";\nimport \"../style.css\";\n\nconst getCurrentDate = () => {\n  const date = new Date();\n  return date.toDateString();\n};\n\nexport default function() {\n  return (\n    <Fragment >\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n        style={{ paddingTop: \"3em\" }}\n      >\n        <Typography variant className=\"newh1\">\n          {myConstClass.hi1}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.currentdate}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          {getCurrentDate()}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.currenttime}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          <Time />\n        </Typography>\n      </Grid>\n    </Fragment>\n  );\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport TimeFormat from \"hh-mm-ss\";\n\nconst Timer = () => {\n  let mainTime;\n  const secondsLeft = () => {\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const left = (23 - hours) * 3600 + (60 - minutes) * 60 + (60 - seconds);\n    return left;\n  };\n\n  const [seconds, setSeconds] = useState(secondsLeft());\n  useEffect(() => {\n    startTime();\n    return () => {\n      stopTimer();\n    };\n  });\n\n  const startTime = () => {\n    if (seconds && seconds > 0) {\n      mainTime = setInterval(tick, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    clearInterval(mainTime);\n  };\n\n  const tick = () => {\n    setSeconds(seconds => {\n      const updatedSeconds = seconds - 1;\n      if (updatedSeconds < 1) {\n        stopTimer();\n      }\n      return updatedSeconds;\n    });\n  };\n\n  const display = TimeFormat.fromS(seconds, \"hh:mm:ss\");\n  const [h, m, s] = display.split(\":\");\n  return (\n    <Fragment>\n      {h}:{m}:{s}\n    </Fragment>\n  );\n};\nexport default Timer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Timer from \"./functions/timer\";\nimport * as myConstClass from \"./content\";\n\nconst getTomorrowDate = () => {\n  const date = new Date();\n  const left = date.setDate(date.getDate() + 1);\n  return date.toDateString(left);\n};\n\nexport default function() {\n  return (\n    <Fragment>\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n        style={{ paddingTop: \"3em\" }}\n              >\n        <Typography variant className=\"newh1\">\n          {myConstClass.hi2}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.tomorrow}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          {getTomorrowDate()}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.and}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          <Timer />{\" \"}\n          <weak style={{ color: \"black\", fontWeight: 100 }}> {\" away!\"}</weak>\n        </Typography>\n       \n      </Grid>\n    </Fragment>\n  );\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport TimeFormat from \"hh-mm-ss\";\n\nconst Timer = () => {\n  let mainTime;\n  const secondsLeft = () => {\n    const date = new Date();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const left = (hours + 24) * 3600 + (0 + minutes) * 60 + (1 - seconds);\n    return left;\n  };\n\n  const [seconds, setSeconds] = useState(secondsLeft());\n  useEffect(() => {\n    startTime();\n    return () => {\n      stopTimer();\n    };\n  });\n\n  const startTime = () => {\n    if (seconds && seconds > 0) {\n      mainTime = setInterval(tick, 1000);\n    }\n  };\n\n  const stopTimer = () => {\n    clearInterval(mainTime);\n  };\n\n  const tick = () => {\n    setSeconds(seconds => {\n      const updatedSeconds = seconds + 1;\n      if (updatedSeconds < 1) {\n        stopTimer();\n      }\n      return updatedSeconds;\n    });\n  };\n\n  const display = TimeFormat.fromS(seconds, \"hh:mm:ss\");\n  const [h, m, s] = display.split(\":\");\n  return (\n    <Fragment>\n      {h}:{m}:{s}\n    </Fragment>\n  );\n};\nexport default Timer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Yester from \"./functions/yester-timer\";\nimport * as myConstClass from \"./content\";\nconst getYesterDate = () => {\n  const date = new Date();\n  const left = date.setDate(date.getDate() - 1);\n  return date.toDateString(left);\n};\n\nexport default function() {\n  return (\n    <Fragment>\n      <Grid\n        container\n        spacing={0}\n        align=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n        style={{ paddingTop: \"3em\" }}  \n            >\n        <Typography variant className=\"newh1\">\n          {myConstClass.hi2}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.yesterday}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          {getYesterDate()}\n        </Typography>\n        <Typography variant className=\"newh2\">\n          {myConstClass.started}\n        </Typography>\n        <Typography variant className=\"newh3\">\n          {\" \"}\n          <Yester />\n          <weak style={{ color: \"black\", fontWeight: 100 }}>\n            {\" \"}\n            {\" ago!\"}\n          </weak>{\" \"}\n        </Typography>\n        \n      </Grid>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Today from \"../components/today\";\nimport Tomorrow from \"../components/tomorrow\";\n\nimport Yesterday from \"../components/yesterday\";\n\nimport Box from \"@material-ui/core/Box\";\nimport \"../style.css\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Box p={4}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"transparent\"\n  }\n}));\n\nexport default function FullWidthTabs() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(1);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"full width tabs example\"\n          centered\n          backgroundColor=\"\"\n        >\n          <Tab label=\"Yesterday\" {...a11yProps(0)} />\n          <Tab label=\"Today\" {...a11yProps(1)} />\n          <Tab label=\"Tomorrow\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <Yesterday />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Today />\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          <Tomorrow />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport * as serviceWorker from './serviceWorker';\nimport Tab from './components/tab'\nimport Footer from './components/footer'\nReactDOM.render(\n<fragment>\n    <Tab />``\n    <Footer />\n</fragment>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"../style.css\";\nimport { Typography } from \"@material-ui/core\";\nimport * as myConstClass from \"./content\";\n\n\n\nexport default function() {\n  return (\n     <div className=\"footer\">\n          <Typography className=\"h6\">{myConstClass.developed}</Typography>\n          Made with <strong style={{ color: \"blue\", fontWeight: 500, }}>❤</strong> By{\" \"}\n          <a\n            href=\"https://docs.google.com/document/d/1Lw4pK5alCaGFamrLUaHiyaCYCvwY707L_bIBcvxFGd4/edit?usp=sharing\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <strong style={{ color: \"blue\", fontWeight: 500, }}> Inalien</strong>\n          </a>{\" \"}\n          | Times are in Device Time.\n     </div> \n  );\n}\n"],"sourceRoot":""}